#!/bin/bash
set -euo pipefail

_glx.env() {
    export DISPLAY=:$1
    export XAUTHORITY=/run/user/${2}/gdm/Xauthority
    sudo glxinfo | grep renderer
}
_x11vnc() {
    sudo x11vnc -forever -loop -noxdamage -repeat -rfbauth $HOME/.vnc/passwd -rfbport 5900 -shared -auth $XAUTHORITY -display $DISPLAY
}

vnc.login() {
    sudo systemctl start gdm
    _glx.env 0 121
    _x11vnc
}

vnc.desktop() {
    _glx.env 1 1000
    _x11vnc
}

dxt1.test.vnc() {
    _glx.env 1 1000
    dxt1.test
}

build.all() {
    mkdir -p build && cd build
    cmake ..
    cmake --build .
}

dxt1.test() {
    cmake --build build -t 1.getting_started__4.1.textures
    cd ./bin/1.getting_started/
    ./1.getting_started__4.1.textures
}

mesa.download() {
    wget https://archive.mesa3d.org/mesa-21.3.4.tar.xz
    tar xvf mesa-21.3.4.tar.xz
}
MESA_INSTALLDIR=`pwd`/out
mesa.build() {
    apt-get build-dep mesa # Debian and derivatives
    meson setup builddir/ -Dprefix="$MESA_INSTALLDIR" -Dgallium-drivers=radeonsi -Dgallium-vdpau=false \
        -Dvulkan-drivers=
    ninja -C builddir/
    sudo ninja -C builddir/ install
}
mesa.run() {
    export LD_LIBRARY_PATH=$MESA_INSTALLDIR/lib/aarch64-linux-gnu/
    _glx.env 1 1000
    cd ../LearnOpenGL/
    dxt1.test.vnc
}

help() { echo "run, the minimalist's task runner - https://github.com/simpzan/run"; }
.tasks() { compgen -A function | grep -v "^\."; }
${@:-.tasks}
